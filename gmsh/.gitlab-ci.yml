# Gmsh - Copyright (C) 1997-2021 C. Geuzaine, J.-F. Remacle
#
# See the LICENSE.txt file for license information. Please report all
# issues on https://gitlab.onelab.info/gmsh/gmsh/issues.

variables:
  EXTRA_OPTION: ""

.ssh_config: &ssh_config
  before_script:
    - echo "$SSH_TOKEN" > ~/.ssh/id_rsa
    - echo "Host *" > ~/.ssh/config
    - echo "StrictHostKeyChecking no" >> ~/.ssh/config
    - chmod 700 ~/.ssh/id_rsa ~/.ssh/config

# ----------------------------------------------
# Continuous integration builds for all branches
# ----------------------------------------------

linux64_ci:
  image: onelab/ubuntu20.04
  script:
    - mkdir build
    - cd build
    - export CXXFLAGS=-Werror
    - cmake ..
    - make -j 8
    - ctest -j 8 --output-on-failure
    - valgrind --leak-check=full --error-exitcode=1 ./gmsh ../tutorial/t5.geo -3
  tags:
    - linux64
    - docker
  except:
    - tags

linux64_compatibility_ci:
  image: onelab/ubuntu20.04
  script:
    - mkdir build
    - cd build
    - cmake -DDEFAULT=0 ..
    - make -j 8
    - cmake -DENABLE_PARSER=1 ..
    - make -j 8
    - cmake -DENABLE_POST=1 ..
    - make -j 8
    - cmake -DENABLE_MESH=1 -DENABLE_BUILD_DYNAMIC=1 -DENABLE_PRIVATE_API=1 -DENABLE_EIGEN=0 -DENABLE_WRAP_PYTHON=1 -DENABLE_PETSC=1 ..
    - make -j 8
  tags:
    - linux64
    - docker
  except:
    - tags

windows64_ci:
  script:
    - md build
    - cd build
    - c:\cygwin64\bin\bash -c "/usr/bin/cmake -DCMAKE_PREFIX_PATH='/usr/local/opencascade;/usr/local;/usr/x86_64-w64-mingw32/sys-root/mingw' -DCMAKE_C_COMPILER=/usr/bin/x86_64-w64-mingw32-gcc.exe -DCMAKE_CXX_COMPILER=/usr/bin/x86_64-w64-mingw32-g++.exe -DCMAKE_Fortran_COMPILER=/usr/bin/x86_64-w64-mingw32-gfortran.exe -DCMAKE_RC_COMPILER=/usr/bin/x86_64-w64-mingw32-windres.exe -DBLAS_LAPACK_LIBRARIES='/usr/local/lib/libopenblas.a;-lgfortran;-lquadmath' -DENABLE_OS_SPECIFIC_INSTALL=1 .."
    - c:\cygwin64\bin\bash -c "/usr/bin/make -j 8"
    - c:\cygwin64\bin\bash -c "/usr/bin/ctest -j 8 --output-on-failure"
  tags:
    - windows64
    - shared
  except:
    - tags

windows64_msvc_ci:
  script:
    - md build
    - cd build
    - cmake ..
    - msbuild package.vcxproj
  tags:
    - windows64
    - shared
  except:
    - tags

# ------------------------------------------
# Official Linux builds (master branch only)
# ------------------------------------------

.linux_official: &linux_official
  only:
    - master@gmsh/gmsh
  <<: *ssh_config
  script:
    - mkdir build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Release -DGMSH_HOST=gmsh.info -DCMAKE_PREFIX_PATH='/usr/local' -DENABLE_PETSC=1 -DPETSC_ARCH=real_mumps_seq -DPETSC_DIR=/petsc-3.14.4 ${EXTRA_OPTION} ..
    - make package -j 8
    - PKG=`ls gmsh-*.tar*`
    - scp ${PKG} geuzaine@gmsh.info:.wwwgmsh/bin/Linux/${PKG/\.tar\.gz/\.tgz}
    - ctest -j 8 --output-on-failure
  tags:
    - linux64
    - docker

linux64_official_snapshot:
  image: onelab/debian.wheezy.64bit
  variables:
    EXTRA_OPTION: "-DBLAS_LAPACK_LIBRARIES='/usr/local/lib/libopenblas.a;/usr/local/lib64/libgfortran.a;/usr/local/lib64/libquadmath.a;-lpthread;-static-libstdc++'"
  <<: *linux_official
  except:
    - tags

linux64_official_release:
  image: onelab/debian.wheezy.64bit
  variables:
    EXTRA_OPTION: "-DGMSH_RELEASE=1 -DBLAS_LAPACK_LIBRARIES='/usr/local/lib/libopenblas.a;/usr/local/lib64/libgfortran.a;/usr/local/lib64/libquadmath.a;-lpthread;-static-libstdc++'"
  <<: *linux_official
  after_script:
    - cd build
    - VERSION=`cat version.txt`
    - ssh geuzaine@gmsh.info "cd .wwwgmsh/bin/Linux && rm -f gmsh-stable-Linux64.tgz && ln -s gmsh-${VERSION}-Linux64.tgz gmsh-stable-Linux64.tgz"
  only:
    - /^gmsh_.*$/

linux64-sdk_official_snapshot:
  image: onelab/debian.wheezy.64bit
  variables:
    EXTRA_OPTION: "-DENABLE_BUILD_DYNAMIC=1 -DINSTALL_SDK_README=1 -DBLAS_LAPACK_LIBRARIES='/usr/local/lib/libopenblas.a;/usr/local/lib64/libgfortran.a;/usr/local/lib64/libquadmath.a;-lpthread'"
  <<: *linux_official
  except:
    - tags

linux64-sdk_official_release:
  image: onelab/debian.wheezy.64bit
  variables:
    EXTRA_OPTION: "-DGMSH_RELEASE=1 -DENABLE_BUILD_DYNAMIC=1 -DINSTALL_SDK_README=1 -DBLAS_LAPACK_LIBRARIES='/usr/local/lib/libopenblas.a;/usr/local/lib64/libgfortran.a;/usr/local/lib64/libquadmath.a;-lpthread'"
  <<: *linux_official
  after_script:
    - cd build
    - VERSION=`cat version.txt`
    - ssh geuzaine@gmsh.info "cd .wwwgmsh/bin/Linux && rm -f gmsh-stable-Linux64-sdk.tgz && ln -s gmsh-${VERSION}-Linux64-sdk.tgz gmsh-stable-Linux64-sdk.tgz"
  only:
    - /^gmsh_.*$/

linux64-nox-sdk_official_snapshot:
  image: onelab/debian.wheezy.64bit
  variables:
    EXTRA_OPTION: "-DGMSH_EXTRA_VERSION=-nox -DENABLE_FLTK=0 -DENABLE_OCC_CAF=0 -DENABLE_BUILD_DYNAMIC=1 -DINSTALL_SDK_README=1 -DBLAS_LAPACK_LIBRARIES='/usr/local/lib/libopenblas.a;/usr/local/lib64/libgfortran.a;/usr/local/lib64/libquadmath.a;-lpthread'"
  <<: *linux_official
  except:
    - tags

linux32_official_snapshot:
  image: onelab/debian.wheezy.32bit
  variables:
    EXTRA_OPTION: "-DBLAS_LAPACK_LIBRARIES='/usr/local/lib/libopenblas.a;/usr/local/lib/libgfortran.a;/usr/local/lib/libquadmath.a;-lpthread;-static-libstdc++'"
  <<: *linux_official
  except:
    - tags

linux32_official_release:
  image: onelab/debian.wheezy.32bit
  variables:
    EXTRA_OPTION: "-DGMSH_RELEASE=1 -DBLAS_LAPACK_LIBRARIES='/usr/local/lib/libopenblas.a;/usr/local/lib/libgfortran.a;/usr/local/lib/libquadmath.a;-lpthread;-static-libstdc++'"
  <<: *linux_official
  after_script:
    - cd build
    - VERSION=`cat version.txt`
    - ssh geuzaine@gmsh.info "cd .wwwgmsh/bin/Linux && rm -f gmsh-stable-Linux32.tgz && ln -s gmsh-${VERSION}-Linux32.tgz gmsh-stable-Linux32.tgz"
  only:
    - /^gmsh_.*$/

linux32-sdk_official_snapshot:
  image: onelab/debian.wheezy.32bit
  variables:
    EXTRA_OPTION: "-DENABLE_BUILD_DYNAMIC=1 -DINSTALL_SDK_README=1 -DBLAS_LAPACK_LIBRARIES='/usr/local/lib/libopenblas.a;/usr/local/lib/libgfortran.a;/usr/local/lib/libquadmath.a;-lpthread'"
  <<: *linux_official
  except:
    - tags

linux32-sdk_official_release:
  image: onelab/debian.wheezy.32bit
  variables:
    EXTRA_OPTION: "-DGMSH_RELEASE=1 -DENABLE_BUILD_DYNAMIC=1 -DINSTALL_SDK_README=1 -DBLAS_LAPACK_LIBRARIES='/usr/local/lib/libopenblas.a;/usr/local/lib/libgfortran.a;/usr/local/lib/libquadmath.a;-lpthread'"
  <<: *linux_official
  after_script:
    - cd build
    - VERSION=`cat version.txt`
    - ssh geuzaine@gmsh.info "cd .wwwgmsh/bin/Linux && rm -f gmsh-stable-Linux32-sdk.tgz && ln -s gmsh-${VERSION}-Linux32-sdk.tgz gmsh-stable-Linux32-sdk.tgz"
  only:
    - /^gmsh_.*$/

# --------------------------------------------
# Official Windows builds (master branch only)
# --------------------------------------------

.windows_official: &windows_official
  only:
    - master@gmsh/gmsh
  script:
    - md build
    - cd build
    - bash -c "/usr/bin/cmake -DCMAKE_BUILD_TYPE=Release -DGMSH_HOST=gmsh.info -DCMAKE_PREFIX_PATH='/usr/local/opencascade;/usr/local;/usr/mingw32/sys-root/mingw' -DCMAKE_C_COMPILER=/usr/bin/mingw32-gcc.exe -DCMAKE_CXX_COMPILER=/usr/bin/mingw32-g++.exe -DCMAKE_Fortran_COMPILER=/usr/bin/mingw32-gfortran.exe -DCMAKE_RC_COMPILER=/usr/bin/mingw32-windres.exe -DBLAS_LAPACK_LIBRARIES='/usr/local/lib/libopenblas.a;-lgfortran;-lquadmath' -DENABLE_OS_SPECIFIC_INSTALL=1 -DENABLE_PETSC=1 -DPETSC_ARCH=real_mumps_seq -DPETSC_DIR=/home/geuzaine/src/petsc ${EXTRA_OPTION} .."
    - bash -c "/usr/bin/make package -j 3"
    - bash -c "/usr/bin/scp -o StrictHostKeyChecking=no -i /home/geuzaine/.ssh/id_rsa gmsh-*.zip geuzaine@gmsh.info:.wwwgmsh/bin/Windows/"
    - bash -c "/usr/bin/ctest -j 3 --output-on-failure"

windows64_official_snapshot:
  <<: *windows_official
  tags:
    - windows64
    - official
  except:
    - tags

windows64_official_release:
  variables:
    EXTRA_OPTION: "-DGMSH_RELEASE=1"
  <<: *windows_official
  after_script:
    - cd build
    - bash -c 'VERSION=`cat version.txt`; /usr/bin/ssh -o StrictHostKeyChecking=no -i /home/geuzaine/.ssh/id_rsa geuzaine@gmsh.info "cd .wwwgmsh/bin/Windows && rm -f gmsh-stable-Windows64.zip && ln -s gmsh-${VERSION}-Windows64.zip gmsh-stable-Windows64.zip"'
  tags:
    - windows64
    - official
  only:
    - /^gmsh_.*$/

windows64-sdk_official_snapshot:
  variables:
    EXTRA_OPTION: "-DENABLE_PACKAGE_STRIP=0 -DENABLE_OS_SPECIFIC_INSTALL=0 -DENABLE_BUILD_DYNAMIC=1 -DINSTALL_SDK_README=1"
  <<: *windows_official
  tags:
    - windows64
    - official
  except:
    - tags

windows64-sdk_official_release:
  variables:
    EXTRA_OPTION: "-DGMSH_RELEASE=1 -DENABLE_OS_SPECIFIC_INSTALL=0 -DENABLE_BUILD_DYNAMIC=1 -DINSTALL_SDK_README=1"
  <<: *windows_official
  after_script:
    - cd build
    - bash -c 'VERSION=`cat version.txt`; /usr/bin/ssh -o StrictHostKeyChecking=no -i /home/geuzaine/.ssh/id_rsa geuzaine@gmsh.info "cd .wwwgmsh/bin/Windows && rm -f gmsh-stable-Windows64-sdk.zip && ln -s gmsh-${VERSION}-Windows64-sdk.zip gmsh-stable-Windows64-sdk.zip"'
  tags:
    - windows64
    - official
  only:
    - /^gmsh_.*$/

windows32_official_snapshot:
  <<: *windows_official
  tags:
    - windows32
    - official
  except:
    - tags

windows32_official_release:
  variables:
    EXTRA_OPTION: "-DGMSH_RELEASE=1"
  <<: *windows_official
  after_script:
    - cd build
    - bash -c 'VERSION=`cat version.txt`; /usr/bin/ssh -o StrictHostKeyChecking=no -i /home/geuzaine/.ssh/id_rsa geuzaine@gmsh.info "cd .wwwgmsh/bin/Windows && rm -f gmsh-stable-Windows32.zip && ln -s gmsh-${VERSION}-Windows32.zip gmsh-stable-Windows32.zip"'
  tags:
    - windows32
    - official
  only:
    - /^gmsh_.*$/

windows32-sdk_official_snapshot:
  variables:
    EXTRA_OPTION: "-DENABLE_OS_SPECIFIC_INSTALL=0 -DENABLE_BUILD_DYNAMIC=1 -DINSTALL_SDK_README=1"
  <<: *windows_official
  tags:
    - windows32
    - official
  except:
    - tags

windows32-sdk_official_release:
  variables:
    EXTRA_OPTION: "-DGMSH_RELEASE=1 -DENABLE_OS_SPECIFIC_INSTALL=0 -DENABLE_BUILD_DYNAMIC=1 -DINSTALL_SDK_README=1"
  <<: *windows_official
  after_script:
    - cd build
    - bash -c 'VERSION=`cat version.txt`; /usr/bin/ssh -o StrictHostKeyChecking=no -i /home/geuzaine/.ssh/id_rsa geuzaine@gmsh.info "cd .wwwgmsh/bin/Windows && rm -f gmsh-stable-Windows32-sdk.zip && ln -s gmsh-${VERSION}-Windows32-sdk.zip gmsh-stable-Windows32-sdk.zip"'
  tags:
    - windows32
    - official
  only:
    - /^gmsh_.*$/

# ------------------------------------------
# Official MacOS builds (master branch only)
# ------------------------------------------

.macos_official: &macos_official
  only:
    - master@gmsh/gmsh
  script:
    - mkdir build
    - cd build
    - /usr/local/bin/cmake -DCMAKE_BUILD_TYPE=Release -DGMSH_HOST=gmsh.info -DCMAKE_PREFIX_PATH='/usr/local/opencascade;/usr/local' -DCMAKE_C_COMPILER=/opt/local/bin/clang-mp-3.9 -DCMAKE_CXX_COMPILER=/opt/local/bin/clang++-mp-3.9 -DENABLE_CAIRO=0 -DBLAS_LAPACK_LIBRARIES='/usr/local/lib/libopenblas.a;/opt/local/lib/gcc5/libgfortran.a;/opt/local/lib/gcc5/libquadmath.a;/opt/local/lib/gcc5/gcc/x86_64-apple-darwin13/5.4.0/libgcc.a' -DENABLE_OS_SPECIFIC_INSTALL=1 -DENABLE_GMP=0 -DENABLE_PETSC=1 -DPETSC_ARCH=real_mumps_seq -DPETSC_DIR=/Users/geuzaine/src/petsc ${EXTRA_OPTION} ..
    - make package -j 2
    - PKG=`ls gmsh-*.[dt][ma][gr]*`
    - if [[ $PKG == *".dmg"* ]]; then scp ${PKG} ace@ace36.montefiore.ulg.ac.be:/tmp; fi
    - if [[ $PKG == *".dmg"* ]]; then ssh ace@ace36.montefiore.ulg.ac.be /Users/ace/re-sign.sh /tmp/${PKG}; fi
    - if [[ $PKG == *".dmg"* ]]; then scp ace@ace36.montefiore.ulg.ac.be:/tmp/${PKG} .; fi
    - scp ${PKG} geuzaine@gmsh.info:.wwwgmsh/bin/MacOSX/${PKG/\.tar\.gz/\.tgz}
    - /usr/local/bin/ctest -j 2 --output-on-failure
  tags:
    - macos64
    - official

macos64_official_snapshot:
  <<: *macos_official
  except:
    - tags

macos64_official_release:
  variables:
    EXTRA_OPTION: "-DGMSH_RELEASE=1"
  <<: *macos_official
  after_script:
    - cd build
    - VERSION=`cat version.txt`
    - ssh geuzaine@gmsh.info "cd .wwwgmsh/bin/MacOSX && rm -f gmsh-stable-MacOSX.dmg && ln -s gmsh-${VERSION}-MacOSX.dmg gmsh-stable-MacOSX.dmg"
  only:
    - /^gmsh_.*$/

macos64-sdk_official_snapshot:
  variables:
    EXTRA_OPTION: "-DENABLE_OS_SPECIFIC_INSTALL=0 -DENABLE_BUILD_DYNAMIC=1 -DINSTALL_SDK_README=1"
  <<: *macos_official
  except:
    - tags

macos64-sdk_official_release:
  variables:
    EXTRA_OPTION: "-DGMSH_RELEASE=1 -DENABLE_OS_SPECIFIC_INSTALL=0 -DENABLE_BUILD_DYNAMIC=1 -DINSTALL_SDK_README=1"
  <<: *macos_official
  after_script:
    - cd build
    - VERSION=`cat version.txt`
    - ssh geuzaine@gmsh.info "cd .wwwgmsh/bin/MacOSX && rm -f gmsh-stable-MacOSX-sdk.tgz && ln -s gmsh-${VERSION}-MacOSX-sdk.tgz gmsh-stable-MacOSX-sdk.tgz"
  only:
    - /^gmsh_.*$/

# ----------------------------------------------
# Official source snapshots (master branch only)
# ----------------------------------------------

.source_official: &source_official
  image: onelab/ubuntu20.04
  only:
    - master@gmsh/gmsh
  <<: *ssh_config
  script:
    - mkdir build_src
    - cd build_src
    - cmake ${EXTRA_OPTION} ..
    - make package_source
    - PKG=`ls gmsh-*.tar*`
    - scp ${PKG} geuzaine@gmsh.info:.wwwgmsh/src/${PKG/\.tar\.gz/\.tgz}
  tags:
    - linux64
    - docker

source_official_snapshot:
  <<: *source_official
  except:
    - tags

source_official_release:
  variables:
    EXTRA_OPTION: "-DGMSH_RELEASE=1"
  <<: *source_official
  after_script:
    - cd build_src
    - VERSION=`cat version.txt`
    - ssh geuzaine@gmsh.info "cd .wwwgmsh/src && rm -f gmsh-stable-source.tgz && ln -s gmsh-${VERSION}-source.tgz gmsh-stable-source.tgz"
  only:
    - /^gmsh_.*$/

# ----------------------------------------------
# Official documentation (master branch only)
# ----------------------------------------------

doc_official_snapshot:
  stage: .post
  image: onelab/ubuntu20.04
  only:
    - master@gmsh/gmsh
  <<: *ssh_config
  script:
    - mkdir build_doc
    - cd build_doc
    - cmake ..
    - make doc
    - scp gmsh-*-doc.tgz geuzaine@gmsh.info:.wwwgmsh/doc.tgz
    - ssh geuzaine@gmsh.info "cd .wwwgmsh/dev && tar zxvf ../doc.tgz"
  tags:
    - linux64
    - docker
  except:
    - tags

doc_official_release:
  stage: .post
  image: onelab/ubuntu20.04
  only:
    - master@gmsh/gmsh
  <<: *ssh_config
  script:
    - mkdir build_doc
    - cd build_doc
    - cmake -DGMSH_RELEASE=1 ..
    - make doc
    - scp gmsh-*-doc.tgz geuzaine@gmsh.info:.wwwgmsh/doc.tgz
    - ssh geuzaine@gmsh.info "cd .wwwgmsh && tar zxvf doc.tgz"
    - scp ../doc/gmsh.html geuzaine@gmsh.info:.wwwgmsh/
  tags:
    - linux64
    - docker
  only:
    - /^gmsh_.*$/

# ----------------------------------------------
# Cookbook
# ----------------------------------------------

doc_cookbook:
  stage: .post
  image: onelab/ubuntu20.04
  only:
    - gmsh/gmsh
  <<: *ssh_config
  script:
    - mdbook build doc/cookbook
    - scp -r doc/cookbook/book geuzaine@gmsh.info:.wwwgmsh/doc/cookbook
  tags:
    - linux64
    - docker

# ----------------------------------------------
# PyPi package
# ----------------------------------------------

pypi_official_release:
  stage: .post
  image: onelab/ubuntu20.04
  only:
    - master@gmsh/gmsh
  before_script:
    - echo "[distutils]" > ~/.pypirc
    - echo "index-servers = pypi" >> ~/.pypirc
    - echo "[pypi]" >> ~/.pypirc
    - echo "username = __token__" >> ~/.pypirc
    - echo "password = $PYPI_TOKEN" >> ~/.pypirc
  script:
    - mkdir build_pypi
    - cd build_pypi
    - cmake -DGMSH_RELEASE=1 ..
    - cd ../utils/pypi/gmsh
    - python3 setup.py sdist
    - twine upload dist/*
    - cd ../gmsh-dev
    - python3 setup.py sdist
    - twine upload dist/*
  tags:
    - linux64
    - docker
  only:
    - /^gmsh_.*$/
